{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Jovian A user-friendly Viromics toolkit For Citations, please use the following DOI: See the documentation: Or view an example notebook: We're still working on this website. Not everything is finished. It's possible that you'll find unfinished pages or broken links throughout this site. If you're looking for information that we haven't made available on this site yet. Please let us know through a github issue . We'll respond as soon as we can. Important information This documentation site will always correspond to the latest release version of Jovian. We recommend to always use the latest version as we are constantly working on improvements. Quick download \u00b6 Use the following command to download the latest release of Jovian and move to the newly downloaded Jovian/ directory. git clone https://github.com/DennisSchmitz/Jovian.git ; cd Jovian Tip: Use Jovian in individual project folders so you can easily keep track of multiple analyses You can also use Jovian on a per-project basis. Replace \"<project>\" with the desired name of your project in the snippet below. dir = \"<project>\" ; git clone https://github.com/DennisSchmitz/Jovian.git $dir ; cd $dir Please see the Requirements and Installation pages if you haven't used Jovian before. About Jovian \u00b6 Jovian is a Viromics toolkit to automatically process raw NGS data from human clinical matrices (faeces, serum, etc.) into clinically relevant information. Jovian has three supported workflows: Illumina based Metagenomics : Includes (amongst other features) data quality control, assembly, taxonomic classification, viral typing, and minority variant identification (quasispecies). Illumina based Reference-alignment : Includes (amongst other features) data quality control, alignment, SNP identification, and consensus-sequence generation. Nanopore based Reference-alignment : Includes (amongst other features) data quality control, alignment, SNP identification, and consensus-sequence generation. See more information about the supported workflows Key features of Jovian \u00b6 User-friendliness : Wetlab personnel can start, configure and interpret results via an interactive web-report. Click here for an example report . This makes doing Public Health analyses much more accessible and user-friendly since minimal command-line skills are required. Audit trail : All pipeline parameters, software versions, database information and runtime statistics are logged. Portable : Jovian is easily installed on off-site computer systems and at back-up sister institutes. Allowing results to be generated even when the internal grid-computer is down (speaking from experience). Features \u00b6 The features of Jovian are specific to the workflow that you choose to run. However, all the workflows support at least the following general features: Data quality control (QC) and cleaning. Including library fragment length analysis, useful for sample preparation QC. Removal of human 1 data (patient privacy). Presentation of all processes through an interactive web report including an audit trail. Metagenomics specific features \u00b6 Assembly of short reads into bigger scaffolds (often full viral genomes). Taxonomic classification: Every nucleic acid containing biological entity (i.e. not only viruses) is determined up to species level. Lowest Common Ancestor (LCA) analysis is performed to move ambiguous results up to their last common ancestor, which makes results more robust. Viral typing: Several viral families and genera can be taxonomically labelled at the sub-species level as described here . Viral scaffolds are cross-referenced against the Virus-Host interaction database and NCBI host database. Scaffolds are annotated in detail: Depth of coverage. GC content. Open reading frames (ORFs) are predicted. Minority variants (quasispecies) are identified. Importantly, results of all processes listed above are presented via an interactive web-report including an audit trail. Reference-alignment specific features \u00b6 All cleaned reads are aligned against the user-provided reference fasta. SNPs are called and a consensus genome is generated. Consensus genomes are filtered at the following coverage cut-off thresholds: 1, 5, 10, 30 and 100x. A tabular overview of the breadth of coverage (BoC) at the different coverage cut-off thresholds is generated. Alignments and visualized via IGVjs and allow manual assessment and validation of consensus genomes. Visualizations \u00b6 All data are visualized via an interactive web-report, as shown here . The content shown in the interactive web-report changes depending on the data and method that was used to analyze the samples. Visualizations for the Metagenomic analysis workflow(s) \u00b6 A collation of interactive QC graphs via MultiQC . Taxonomic results are presented on three levels: For an entire (multi sample) run, interactive heatmaps are made for non-phage viruses, phages and bacteria. They are stratified to different taxonomic levels. For a sample level overview, Krona interactive taxonomic piecharts are generated. For more detailed analyses, interactive tables are included. Similar to popular spreadsheet applications (e.g. Microsoft Excel). Classified scaffolds Unclassified scaffolds (i.e. \"Dark Matter\") Virus typing results are presented via interactive spreadsheet-like tables. An interactive scaffold alignment viewer ( IGVjs ) is included, containing: Detailed alignment information. Depth of coverage graph. GC content graph. Predicted open reading frames (ORFs). Identified minority variants (quasispecies). All SNP metrics are presented via interactive spreadsheet-like tables, allowing detailed analysis. Visualizations for the Reference based analysis workflow(s) \u00b6 A collation of interactive QC graphs via MultiQC . Breadth-Of-Coverage, in regards of the given reference sequence, reports per input sample in various coverage thresholds. An interactive alignment viewer ( IGVjs ) showing detailed read-alignment for each input sample. Detailed alignment information. Depth of coverage graph GC content graph Identified SNPs All SNPs are presented via interactive spreadsheet-like tables, allowing detailed analysis. You can use whichever reference you would like . However, Jovian is intended for human clinical samples. \u21a9","title":"Home"},{"location":"#quick-download","text":"Use the following command to download the latest release of Jovian and move to the newly downloaded Jovian/ directory. git clone https://github.com/DennisSchmitz/Jovian.git ; cd Jovian Tip: Use Jovian in individual project folders so you can easily keep track of multiple analyses You can also use Jovian on a per-project basis. Replace \"<project>\" with the desired name of your project in the snippet below. dir = \"<project>\" ; git clone https://github.com/DennisSchmitz/Jovian.git $dir ; cd $dir Please see the Requirements and Installation pages if you haven't used Jovian before.","title":"Quick download"},{"location":"#about-jovian","text":"Jovian is a Viromics toolkit to automatically process raw NGS data from human clinical matrices (faeces, serum, etc.) into clinically relevant information. Jovian has three supported workflows: Illumina based Metagenomics : Includes (amongst other features) data quality control, assembly, taxonomic classification, viral typing, and minority variant identification (quasispecies). Illumina based Reference-alignment : Includes (amongst other features) data quality control, alignment, SNP identification, and consensus-sequence generation. Nanopore based Reference-alignment : Includes (amongst other features) data quality control, alignment, SNP identification, and consensus-sequence generation. See more information about the supported workflows","title":"About Jovian"},{"location":"#key-features-of-jovian","text":"User-friendliness : Wetlab personnel can start, configure and interpret results via an interactive web-report. Click here for an example report . This makes doing Public Health analyses much more accessible and user-friendly since minimal command-line skills are required. Audit trail : All pipeline parameters, software versions, database information and runtime statistics are logged. Portable : Jovian is easily installed on off-site computer systems and at back-up sister institutes. Allowing results to be generated even when the internal grid-computer is down (speaking from experience).","title":"Key features of Jovian"},{"location":"#features","text":"The features of Jovian are specific to the workflow that you choose to run. However, all the workflows support at least the following general features: Data quality control (QC) and cleaning. Including library fragment length analysis, useful for sample preparation QC. Removal of human 1 data (patient privacy). Presentation of all processes through an interactive web report including an audit trail.","title":"Features"},{"location":"#metagenomics-specific-features","text":"Assembly of short reads into bigger scaffolds (often full viral genomes). Taxonomic classification: Every nucleic acid containing biological entity (i.e. not only viruses) is determined up to species level. Lowest Common Ancestor (LCA) analysis is performed to move ambiguous results up to their last common ancestor, which makes results more robust. Viral typing: Several viral families and genera can be taxonomically labelled at the sub-species level as described here . Viral scaffolds are cross-referenced against the Virus-Host interaction database and NCBI host database. Scaffolds are annotated in detail: Depth of coverage. GC content. Open reading frames (ORFs) are predicted. Minority variants (quasispecies) are identified. Importantly, results of all processes listed above are presented via an interactive web-report including an audit trail.","title":"Metagenomics specific features"},{"location":"#reference-alignment-specific-features","text":"All cleaned reads are aligned against the user-provided reference fasta. SNPs are called and a consensus genome is generated. Consensus genomes are filtered at the following coverage cut-off thresholds: 1, 5, 10, 30 and 100x. A tabular overview of the breadth of coverage (BoC) at the different coverage cut-off thresholds is generated. Alignments and visualized via IGVjs and allow manual assessment and validation of consensus genomes.","title":"Reference-alignment specific features"},{"location":"#visualizations","text":"All data are visualized via an interactive web-report, as shown here . The content shown in the interactive web-report changes depending on the data and method that was used to analyze the samples.","title":"Visualizations"},{"location":"#visualizations-for-the-metagenomic-analysis-workflows","text":"A collation of interactive QC graphs via MultiQC . Taxonomic results are presented on three levels: For an entire (multi sample) run, interactive heatmaps are made for non-phage viruses, phages and bacteria. They are stratified to different taxonomic levels. For a sample level overview, Krona interactive taxonomic piecharts are generated. For more detailed analyses, interactive tables are included. Similar to popular spreadsheet applications (e.g. Microsoft Excel). Classified scaffolds Unclassified scaffolds (i.e. \"Dark Matter\") Virus typing results are presented via interactive spreadsheet-like tables. An interactive scaffold alignment viewer ( IGVjs ) is included, containing: Detailed alignment information. Depth of coverage graph. GC content graph. Predicted open reading frames (ORFs). Identified minority variants (quasispecies). All SNP metrics are presented via interactive spreadsheet-like tables, allowing detailed analysis.","title":"Visualizations for the Metagenomic analysis workflow(s)"},{"location":"#visualizations-for-the-reference-based-analysis-workflows","text":"A collation of interactive QC graphs via MultiQC . Breadth-Of-Coverage, in regards of the given reference sequence, reports per input sample in various coverage thresholds. An interactive alignment viewer ( IGVjs ) showing detailed read-alignment for each input sample. Detailed alignment information. Depth of coverage graph GC content graph Identified SNPs All SNPs are presented via interactive spreadsheet-like tables, allowing detailed analysis. You can use whichever reference you would like . However, Jovian is intended for human clinical samples. \u21a9","title":"Visualizations for the Reference based analysis workflow(s)"},{"location":"CLI/","text":"This is a complete overview of all the commands that can be used in Jovian. Plus a few examples for good measure. Attention This overview corresponds to Jovian version 1.1.0 Previous versions will not be included in this overview, please reference bash jovian -h to view a list of possible commands for your specific Jovian version Info All commands and arguments must have bash jovian in front of it Commands \u00b6 Starting an analysis \u00b6 Command Argument Explanation illumina-metagenomics / illumina-meta / ilm-meta / im N/A Specifies the \"Illumina-Metagenomics\" workflow to be executed. Must be accompanied by the following flag(s): -i / --input illumina-reference / illumina-ref / ilm-ref / ir N/A Specifies the \"Illumina-Reference\" workflow to be executed. Must be accompanied by the following flag(s): -i / --input -ref / --reference nanopore-reference / nanopore-ref / nano-ref / ont-ref / nr N/A Specifies the \"Nanopore-Reference\" workflow to be executed. Must be accompanied by the following flag(s): -i / --input -ref / --reference -pr / --primers . -i / --input [input directory] This is the folder containing your input fastq files. Default is raw_data/ . Both relative and absolute paths are accepted. -ref / --reference [Reference fasta] Path to the fasta file you wish to use as a reference. Must be a complete path. Both relative and absolute paths are accepted. Example: /path/to/reference/file.fasta -pr / --primers [Primers fasta] Only required in combination with the nanopore-reference workflow. Path to the fasta file that contains all the primers used in order to produce the sequenced-amplicons. Both relative and absolute paths are accepted. Example: /path/to/primer/file.fasta Examples \u00b6 Basic commands in order to start various analyses Starting a metagenomics analysis: bash jovian illumina-meta -i /path/to/raw/illumina-data/ Starting a reference-alignment analysis - Illumina data: bash jovian illumina-ref -i /path/to/raw/illumina-data/ -ref /path/to/reference.fasta Starting a reference-alignment analysis - Nanopore data: bash jovian nanopore-ref -i /path/to/raw/nanopore-data/ -ref /path/to/reference.fasta -pr /path/to/used/primers.fasta General Jovian commands \u00b6 Command Arguments Explanation -v --version N/A Displays the current version of Jovian Can't be combined with other commands -h --help N/A Prints the Jovian help document Can't be combined with other commands --update none, or version number Updates the Jovian installation. When no argument is specified, Jovian will update to the latest release. When a version is specified, Jovian will \"update\" to that version. --archive -y Archives all the output of a Jovian analysis into a single compressed file. Using -y will skip the confirmation prompt. --rebuild-archive N/A Restores the data, results and logs from an archived Jovian run. It's advised to use the same Jovian version for rebuilding the archive, as was used for building the archive. Does not restore the databases. --clean -y Cleans the Jovian working directory. Removes all data, logs, and results. Using -y will skip the confirmation prompt. Removed data cannot be recovered. -id --install-dabases -y Triggers the interactive installation procedure for the required databases. Using -y will skip the confirmation prompt. Manual interaction is still required even when using -y . -ic --install-dependencies N/A Installs the required virtual-environments and software dependencies that will be used by the Jovian workflow(s). These environments are used for reproducibility of the analysis. --make-sample-sheet N/A Only makes the sample sheet of the given input. Functions as a \"debug only mode\" as it allows the individual workflows to be executed without the various controllers included in Jovian. Must be accompanied with a specific workflow and the input directory described here . -m --mode strict / relaxed Changes the stringency settings for the various workflows where applicable. Using --mode without any arguments displays the currently set analysis-mode. Use strict for high precision at the cost of sensitivity. Use relaxed for high sensitivity at the cost of result-certainty. Default: relaxed --configure-jupyter N/A Configures Jupyter Notebooks for use. This has to be done only once per user. --start-jupyter N/A Starts the Jupyter Notebook process. This keeps running until you manually stop the process. Provides you with a URL which you can use to view the interactive report(s). -cq --cluster-queue <queue name> One-time override of the cluster-queue setting which is used when using Jovian in \"HPC/grid mode\". Use this command when you wish to use a different computing-queue without having to manually adjust the settings. This does not change the default settings. -sh --snakemake-help N/A Prints the snakemake help document. Can't be combined with other commands -k --keep-going N/A Keep going with independent jobs if an analysis step fails. Must be accompanied with a specific workflow and the input directory described here -n --dry-run N/A Test-run for a specified workflow, does not execute anything and displays what would be done. Must be accompanied with a specific workflow and the input directory described here -u --unlock N/A Removes the lock on the working directory. Useful in case an analysis run ends abruptly and prevents you from doing a new analysis. Must be accompanied with a specific workflow described here -q --quiet N/A Do not output any progress or job information. Must be accompanied with a specific workflow and the input directory described here vt-help --virus-typing-help N/A Prints additional information about the virus-typing. For example: which family/genus is selected and which species are typed. -vt --virus-typing all / NoV / EV / RVA / HAV / HEV / PV / Flavi Only compatible with the Jovian Illumina-metagenomics workflow Under normal circumstances, you will not have to use this command. Virus typing is done automatically in the Jovian Illumina-metagenomics workflow since version 1.0.0 After a Jovian Illumina-metagenomics workflow has completed, do viral typing for Noroviruses ( NoV ), Enteroviruses ( EV ), Hepatitis A viruses ( HAV ), Hepatitis E viruses ( HEV ), Rotavirus A viruses ( RVA ), Papillomaviruses ( PV ), or Flaviviruses ( Flavi ). You can also use the all keyword to perform virus typing for all viruses listed above. Can't be combined with other commands. Use -vt-help for additional explanation. -vt-force --virus-typing-force all / NoV / EV / RVA / HAV / HEV / PV / Flavi Same as -vt / -virus-typing , but overwrites existing output. Can't be combined with other commands. Use -vt-help for additional explanation. --start-nginx N/A Debug only Starts the nginx process which is used by Jupyter notebook in order to stream data. --stop-nginx N/A Debug only Stops the nginx process which is used by Jupyter notebook in order to stream data. --reset-db N/A \"Forgets\" the locations of the installed databases. This does not delete the databases . Use this command only if the location of your databases has changed or if you accidentally made a mistake when filling in this information. Examples \u00b6 Note TBA","title":"Command line reference"},{"location":"CLI/#commands","text":"","title":"Commands"},{"location":"CLI/#starting-an-analysis","text":"Command Argument Explanation illumina-metagenomics / illumina-meta / ilm-meta / im N/A Specifies the \"Illumina-Metagenomics\" workflow to be executed. Must be accompanied by the following flag(s): -i / --input illumina-reference / illumina-ref / ilm-ref / ir N/A Specifies the \"Illumina-Reference\" workflow to be executed. Must be accompanied by the following flag(s): -i / --input -ref / --reference nanopore-reference / nanopore-ref / nano-ref / ont-ref / nr N/A Specifies the \"Nanopore-Reference\" workflow to be executed. Must be accompanied by the following flag(s): -i / --input -ref / --reference -pr / --primers . -i / --input [input directory] This is the folder containing your input fastq files. Default is raw_data/ . Both relative and absolute paths are accepted. -ref / --reference [Reference fasta] Path to the fasta file you wish to use as a reference. Must be a complete path. Both relative and absolute paths are accepted. Example: /path/to/reference/file.fasta -pr / --primers [Primers fasta] Only required in combination with the nanopore-reference workflow. Path to the fasta file that contains all the primers used in order to produce the sequenced-amplicons. Both relative and absolute paths are accepted. Example: /path/to/primer/file.fasta","title":"Starting an analysis"},{"location":"CLI/#examples","text":"Basic commands in order to start various analyses Starting a metagenomics analysis: bash jovian illumina-meta -i /path/to/raw/illumina-data/ Starting a reference-alignment analysis - Illumina data: bash jovian illumina-ref -i /path/to/raw/illumina-data/ -ref /path/to/reference.fasta Starting a reference-alignment analysis - Nanopore data: bash jovian nanopore-ref -i /path/to/raw/nanopore-data/ -ref /path/to/reference.fasta -pr /path/to/used/primers.fasta","title":"Examples"},{"location":"CLI/#general-jovian-commands","text":"Command Arguments Explanation -v --version N/A Displays the current version of Jovian Can't be combined with other commands -h --help N/A Prints the Jovian help document Can't be combined with other commands --update none, or version number Updates the Jovian installation. When no argument is specified, Jovian will update to the latest release. When a version is specified, Jovian will \"update\" to that version. --archive -y Archives all the output of a Jovian analysis into a single compressed file. Using -y will skip the confirmation prompt. --rebuild-archive N/A Restores the data, results and logs from an archived Jovian run. It's advised to use the same Jovian version for rebuilding the archive, as was used for building the archive. Does not restore the databases. --clean -y Cleans the Jovian working directory. Removes all data, logs, and results. Using -y will skip the confirmation prompt. Removed data cannot be recovered. -id --install-dabases -y Triggers the interactive installation procedure for the required databases. Using -y will skip the confirmation prompt. Manual interaction is still required even when using -y . -ic --install-dependencies N/A Installs the required virtual-environments and software dependencies that will be used by the Jovian workflow(s). These environments are used for reproducibility of the analysis. --make-sample-sheet N/A Only makes the sample sheet of the given input. Functions as a \"debug only mode\" as it allows the individual workflows to be executed without the various controllers included in Jovian. Must be accompanied with a specific workflow and the input directory described here . -m --mode strict / relaxed Changes the stringency settings for the various workflows where applicable. Using --mode without any arguments displays the currently set analysis-mode. Use strict for high precision at the cost of sensitivity. Use relaxed for high sensitivity at the cost of result-certainty. Default: relaxed --configure-jupyter N/A Configures Jupyter Notebooks for use. This has to be done only once per user. --start-jupyter N/A Starts the Jupyter Notebook process. This keeps running until you manually stop the process. Provides you with a URL which you can use to view the interactive report(s). -cq --cluster-queue <queue name> One-time override of the cluster-queue setting which is used when using Jovian in \"HPC/grid mode\". Use this command when you wish to use a different computing-queue without having to manually adjust the settings. This does not change the default settings. -sh --snakemake-help N/A Prints the snakemake help document. Can't be combined with other commands -k --keep-going N/A Keep going with independent jobs if an analysis step fails. Must be accompanied with a specific workflow and the input directory described here -n --dry-run N/A Test-run for a specified workflow, does not execute anything and displays what would be done. Must be accompanied with a specific workflow and the input directory described here -u --unlock N/A Removes the lock on the working directory. Useful in case an analysis run ends abruptly and prevents you from doing a new analysis. Must be accompanied with a specific workflow described here -q --quiet N/A Do not output any progress or job information. Must be accompanied with a specific workflow and the input directory described here vt-help --virus-typing-help N/A Prints additional information about the virus-typing. For example: which family/genus is selected and which species are typed. -vt --virus-typing all / NoV / EV / RVA / HAV / HEV / PV / Flavi Only compatible with the Jovian Illumina-metagenomics workflow Under normal circumstances, you will not have to use this command. Virus typing is done automatically in the Jovian Illumina-metagenomics workflow since version 1.0.0 After a Jovian Illumina-metagenomics workflow has completed, do viral typing for Noroviruses ( NoV ), Enteroviruses ( EV ), Hepatitis A viruses ( HAV ), Hepatitis E viruses ( HEV ), Rotavirus A viruses ( RVA ), Papillomaviruses ( PV ), or Flaviviruses ( Flavi ). You can also use the all keyword to perform virus typing for all viruses listed above. Can't be combined with other commands. Use -vt-help for additional explanation. -vt-force --virus-typing-force all / NoV / EV / RVA / HAV / HEV / PV / Flavi Same as -vt / -virus-typing , but overwrites existing output. Can't be combined with other commands. Use -vt-help for additional explanation. --start-nginx N/A Debug only Starts the nginx process which is used by Jupyter notebook in order to stream data. --stop-nginx N/A Debug only Stops the nginx process which is used by Jupyter notebook in order to stream data. --reset-db N/A \"Forgets\" the locations of the installed databases. This does not delete the databases . Use this command only if the location of your databases has changed or if you accidentally made a mistake when filling in this information.","title":"General Jovian commands"},{"location":"CLI/#examples_1","text":"Note TBA","title":"Examples"},{"location":"FAQ/","text":"FAQ & Known issues \u00b6 This page contains all the frequently asked questions and known issues that we know of for Jovian. We'll try to keep this page as updated as possible. Though you're free to make suggestions by creating a new issue on our github page . Note Please note that this page will only correspond to the latest release version of Jovian. We will not keep other versions of this page for older versions Frequently Asked Questions \u00b6 General \u00b6 I get an error saying the directory is locked, what should I do? \u00b6 Answer It's most likely that an earlier analysis has crashed and/or was cancelled by the user while the pipeline was still running. You can unlock the directory by typing bash jovian --unlock . Why are there multiple lines per taxid in the host/disease information table? \u00b6 Answer In the Virus-Host interaction database there are sometimes multiple entries for a single taxid, meaning, there are multiple known hosts. Therefore, we follow this formatting and print the different hosts on different lines. Why doesn't the virus typing-tool accept my query? \u00b6 Answer Please see this and this issue. The short answer; they were made for Sanger sequences and are not yet able to to handle NGS datasets. This is a work-in-progress. I am missing a certain taxa of which I'm sure is in the dataset. How is that possible? \u00b6 Answer Could be due to multiple reasons. The first one being the stringency of the analysis: The current default values are quite strict, you might have filtered it away. Please try more relaxed settings. The second being the result of the LCA analysis (Lowest Common Ancestor) putting a certain scaffold at a unexpected taxonomic level. Imagine a sequence that is homologous between (pro)phages and bacteria, the lowest common ancestor between phages and bacteria is the theoretical root of all life (i.e. root taxonomic level), so you will find it at the taxonomic level (you can try changing the bitscoreDeltaLCA: 5 to 0 in the config-file. If it is anything other than these reasons, please let us know by making an issue . I don't care about removing the human data, I have samples that are from other species, can I also automatically remove that? \u00b6 Answer Yes. Although we focus on patient-privacy since it was developed for clinical samples, you can enter any reference sequence you like. During your first use of Jovian, you will be asked for the location of a \"background reference\" fasta, you can enter your preferred background reference sequence file there. If you wish to change the background reference sequence file at a later stage, then reset your database choices with bash jovian --reset-db . For more advanced users : You can manually edit the ~/.jovian_installchoice_db file to change your background reference file. The only limitations are that it is a fasta file and that is indexed via bowtie2 , although this latter process might be automated in a future version. How can some scaffolds still be assigned to Homo sapiens ? I thought Jovian removed human data? \u00b6 Answer The human genome is a consensus genome built from many individuals from around the globe. It does not capture all diversity in the human gene pool and therefore cannot completely remove all human data. You can improve this by selecting a reference genome that is closer to your target population, e.g. if you sequence mainly Dutch samples, the GoNL genome might be better suited. We unfortunately cannot guarantee completely accurate removal of the Human Genome and will not take any responsibility when it comes to possible jurisdictional repercussions. Why does installing the pipeline take so long? \u00b6 Answer Why do you have to install the software for every analysis? \u00b6 Answer The answer to both these questions is the same; it is a consequence of making the analysis replicate-able and reproducible. Briefly, for the different analysis steps in the pipeline, disparate virtual environments are created and they take some time to build. Since these virtual environments are created using hard-coded recipes, we know which software was used, and users can easily revert to this environment using the Jovian Git hash (unique methodological fingerprint). Thereby allowing users to replicate your own (old) results or allowing other groups to reproduce your results (if you share the raw data with them). This also allows us developers to easily validate analyses, track and fix bugs and compare results between versions. Therefore, we recommend installing Jovian in a fixed location and only specifying different input directories. Once an analysis is finished, you can archive the results using bash jovian --archive and transfer them to back-up systems for long-term storage. In the scaffold viewer and the minority variant table, the DoC values of forward and reverse orientated reads do not add up to the value reported in the \"Total_depth_of_coverage\" column. \u00b6 Answer Correct, please see this link for an explanation. Known Issues \u00b6 Note TBA","title":"FAQ and known issues"},{"location":"FAQ/#faq-known-issues","text":"This page contains all the frequently asked questions and known issues that we know of for Jovian. We'll try to keep this page as updated as possible. Though you're free to make suggestions by creating a new issue on our github page . Note Please note that this page will only correspond to the latest release version of Jovian. We will not keep other versions of this page for older versions","title":"FAQ &amp; Known issues"},{"location":"FAQ/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"FAQ/#general","text":"","title":"General"},{"location":"FAQ/#i-get-an-error-saying-the-directory-is-locked-what-should-i-do","text":"Answer It's most likely that an earlier analysis has crashed and/or was cancelled by the user while the pipeline was still running. You can unlock the directory by typing bash jovian --unlock .","title":"I get an error saying the directory is locked, what should I do?"},{"location":"FAQ/#why-are-there-multiple-lines-per-taxid-in-the-hostdisease-information-table","text":"Answer In the Virus-Host interaction database there are sometimes multiple entries for a single taxid, meaning, there are multiple known hosts. Therefore, we follow this formatting and print the different hosts on different lines.","title":"Why are there multiple lines per taxid in the host/disease information table?"},{"location":"FAQ/#why-doesnt-the-virus-typing-tool-accept-my-query","text":"Answer Please see this and this issue. The short answer; they were made for Sanger sequences and are not yet able to to handle NGS datasets. This is a work-in-progress.","title":"Why doesn't the virus typing-tool accept my query?"},{"location":"FAQ/#i-am-missing-a-certain-taxa-of-which-im-sure-is-in-the-dataset-how-is-that-possible","text":"Answer Could be due to multiple reasons. The first one being the stringency of the analysis: The current default values are quite strict, you might have filtered it away. Please try more relaxed settings. The second being the result of the LCA analysis (Lowest Common Ancestor) putting a certain scaffold at a unexpected taxonomic level. Imagine a sequence that is homologous between (pro)phages and bacteria, the lowest common ancestor between phages and bacteria is the theoretical root of all life (i.e. root taxonomic level), so you will find it at the taxonomic level (you can try changing the bitscoreDeltaLCA: 5 to 0 in the config-file. If it is anything other than these reasons, please let us know by making an issue .","title":"I am missing a certain taxa of which I'm sure is in the dataset. How is that possible?"},{"location":"FAQ/#i-dont-care-about-removing-the-human-data-i-have-samples-that-are-from-other-species-can-i-also-automatically-remove-that","text":"Answer Yes. Although we focus on patient-privacy since it was developed for clinical samples, you can enter any reference sequence you like. During your first use of Jovian, you will be asked for the location of a \"background reference\" fasta, you can enter your preferred background reference sequence file there. If you wish to change the background reference sequence file at a later stage, then reset your database choices with bash jovian --reset-db . For more advanced users : You can manually edit the ~/.jovian_installchoice_db file to change your background reference file. The only limitations are that it is a fasta file and that is indexed via bowtie2 , although this latter process might be automated in a future version.","title":"I don't care about removing the human data, I have samples that are from other species, can I also automatically remove that?"},{"location":"FAQ/#how-can-some-scaffolds-still-be-assigned-to-czjqqkd0homo-sapiensczjqqkd1-i-thought-jovian-removed-human-data","text":"Answer The human genome is a consensus genome built from many individuals from around the globe. It does not capture all diversity in the human gene pool and therefore cannot completely remove all human data. You can improve this by selecting a reference genome that is closer to your target population, e.g. if you sequence mainly Dutch samples, the GoNL genome might be better suited. We unfortunately cannot guarantee completely accurate removal of the Human Genome and will not take any responsibility when it comes to possible jurisdictional repercussions.","title":"How can some scaffolds still be assigned to \u0002czjqqkd:0\u0003Homo sapiens\u0002czjqqkd:1\u0003? I thought Jovian removed human data?"},{"location":"FAQ/#why-does-installing-the-pipeline-take-so-long","text":"Answer","title":"Why does installing the pipeline take so long?"},{"location":"FAQ/#why-do-you-have-to-install-the-software-for-every-analysis","text":"Answer The answer to both these questions is the same; it is a consequence of making the analysis replicate-able and reproducible. Briefly, for the different analysis steps in the pipeline, disparate virtual environments are created and they take some time to build. Since these virtual environments are created using hard-coded recipes, we know which software was used, and users can easily revert to this environment using the Jovian Git hash (unique methodological fingerprint). Thereby allowing users to replicate your own (old) results or allowing other groups to reproduce your results (if you share the raw data with them). This also allows us developers to easily validate analyses, track and fix bugs and compare results between versions. Therefore, we recommend installing Jovian in a fixed location and only specifying different input directories. Once an analysis is finished, you can archive the results using bash jovian --archive and transfer them to back-up systems for long-term storage.","title":"Why do you have to install the software for every analysis?"},{"location":"FAQ/#in-the-scaffold-viewer-and-the-minority-variant-table-the-doc-values-of-forward-and-reverse-orientated-reads-do-not-add-up-to-the-value-reported-in-the-total_depth_of_coverage-column","text":"Answer Correct, please see this link for an explanation.","title":"In the scaffold viewer and the minority variant table, the DoC values of forward and reverse orientated reads do not add up to the value reported in the \"Total_depth_of_coverage\" column."},{"location":"FAQ/#known-issues","text":"Note TBA","title":"Known Issues"},{"location":"About/Acknowledgements/","text":"Acknowledgements & used software \u00b6 Name Publication Website BBtools NA https://jgi.doe.gov/data-and-tools/bbtools/ BEDtools Quinlan, A.R. and I.M.J.B. Hall, BEDTools: a flexible suite of utilities for comparing genomic features. 2010. 26(6): p. 841-842. https://bedtools.readthedocs.io/en/latest/ BLAST Altschul, S.F., et al., Gapped BLAST and PSI-BLAST: a new generation of protein database search programs. 1997. 25(17): p. 3389-3402. https://www.ncbi.nlm.nih.gov/books/NBK279690/ BWA Li, H. (2013). Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. arXiv preprint arXiv:1303.3997. https://github.com/lh3/bwa BioConda Gr\u00fcning, B., et al., Bioconda: sustainable and comprehensive software distribution for the life sciences. 2018. 15(7): p. 475. https://bioconda.github.io/ Biopython Cock, P. J., Antao, T., Chang, J. T., Chapman, B. A., Cox, C. J., Dalke, A., ... & De Hoon, M. J. (2009). Biopython: freely available Python tools for computational molecular biology and bioinformatics. Bioinformatics, 25(11), 1422-1423. https://biopython.org/ Bokeh Bokeh Development Team (2018). Bokeh: Python library for interactive visualization. https://bokeh.pydata.org/en/latest/ Bowtie2 Langmead, B. and S.L.J.N.m. Salzberg, Fast gapped-read alignment with Bowtie 2. 2012. 9(4): p. 357. http://bowtie-bio.sourceforge.net/bowtie2/index.shtml Conda NA https://conda.io/ DRMAA NA http://drmaa-python.github.io/ FastQC Andrews, S., FastQC: a quality control tool for high throughput sequence data. 2010. https://www.bioinformatics.babraham.ac.uk/projects/fastqc/ gawk NA https://www.gnu.org/software/gawk/ GNU Parallel O. Tange (2018): GNU Parallel 2018, March 2018, https://doi.org/10.5281/zenodo.1146014 . https://www.gnu.org/software/parallel/ Git NA https://git-scm.com/ igvtools NA https://software.broadinstitute.org/software/igv/igvtools Jupyter Notebook Kluyver, Thomas, et al. \"Jupyter Notebooks-a publishing format for reproducible computational workflows.\" ELPUB. 2016. https://jupyter.org/ Jupyter_contrib_nbextension NA https://github.com/ipython-contrib/jupyter_contrib_nbextensions Jupyterthemes NA https://github.com/dunovank/jupyter-themes Krona Ondov, B.D., N.H. Bergman, and A.M. Phillippy, Interactive metagenomic visualization in a Web browser. BMC Bioinformatics, 2011. 12: p. 385. https://github.com/marbl/Krona/wiki Lofreq Wilm, A., et al., LoFreq: a sequence-quality aware, ultra-sensitive variant caller for uncovering cell-population heterogeneity from high-throughput sequencing datasets. 2012. 40(22): p. 11189-11201. http://csb5.github.io/lofreq/ Minimap2 Li, H., Minimap2: pairwise alignment for nucleotide sequences. Bioinformatics, 2018. https://github.com/lh3/minimap2 MultiQC Ewels, P., et al., MultiQC: summarize analysis results for multiple tools and samples in a single report. 2016. 32(19): p. 3047-3048. https://multiqc.info/ Nb_conda NA https://github.com/Anaconda-Platform/nb_conda Nb_conda_kernels NA https://github.com/Anaconda-Platform/nb_conda_kernels Nginx NA https://www.nginx.com/ Numpy Walt, S. V. D., Colbert, S. C., & Varoquaux, G. (2011). The NumPy array: a structure for efficient numerical computation. Computing in Science & Engineering, 13(2), 22-30. http://www.numpy.org/ Pandas McKinney, W. Data structures for statistical computing in python. in Proceedings of the 9 th Python in Science Conference. 2010. Austin, TX. https://pandas.pydata.org/ Picard NA https://broadinstitute.github.io/picard/ Prodigal Hyatt, D., et al., Prodigal: prokaryotic gene recognition and translation initiation site identification. 2010. 11(1): p. 119. https://github.com/hyattpd/Prodigal/wiki/Introduction Python G. van Rossum, Python tutorial, Technical Report CS-R9526, Centrum voor Wiskunde en Informatica (CWI), Amsterdam, May 1995. https://www.python.org/ Qgrid NA https://github.com/quantopian/qgrid SAMtools Li, H., et al., The sequence alignment/map format and SAMtools. 2009. 25(16): p. 2078-2079. http://www.htslib.org/ SPAdes Nurk, S., et al., metaSPAdes: a new versatile metagenomic assembler. Genome Res, 2017. 27(5): p. 824-834. http://cab.spbu.ru/software/spades/ Seqtk NA https://github.com/lh3/seqtk Snakemake K\u00f6ster, J. and S.J.B. Rahmann, Snakemake\u2014a scalable bioinformatics workflow engine. 2012. 28(19): p. 2520-2522. https://snakemake.readthedocs.io/en/stable/ Tabix NA www.htslib.org/doc/tabix.html tree NA http://mama.indstate.edu/users/ice/tree/ Trimmomatic Bolger, A.M., M. Lohse, and B. Usadel, Trimmomatic: a flexible trimmer for Illumina sequence data. Bioinformatics, 2014. 30(15): p. 2114-20. www.usadellab.org/cms/?page=trimmomatic Virus-Host Database Mihara, T., Nishimura, Y., Shimizu, Y., Nishiyama, H., Yoshikawa, G., Uehara, H., ... & Ogata, H. (2016). Linking virus genomes with host taxonomy. Viruses, 8(3), 66. http://www.genome.jp/virushostdb/note.html Virus-typing tools Kroneman, A., Vennema, H., Deforche, K., Avoort, H. V. D., Penaranda, S., Oberste, M. S., ... & Koopmans, M. (2011). An automated genotyping tool for enteroviruses and noroviruses. Journal of Clinical Virology, 51(2), 121-125. https://www.ncbi.nlm.nih.gov/pubmed/21514213","title":"Acknowledgements"},{"location":"About/Acknowledgements/#acknowledgements-used-software","text":"Name Publication Website BBtools NA https://jgi.doe.gov/data-and-tools/bbtools/ BEDtools Quinlan, A.R. and I.M.J.B. Hall, BEDTools: a flexible suite of utilities for comparing genomic features. 2010. 26(6): p. 841-842. https://bedtools.readthedocs.io/en/latest/ BLAST Altschul, S.F., et al., Gapped BLAST and PSI-BLAST: a new generation of protein database search programs. 1997. 25(17): p. 3389-3402. https://www.ncbi.nlm.nih.gov/books/NBK279690/ BWA Li, H. (2013). Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. arXiv preprint arXiv:1303.3997. https://github.com/lh3/bwa BioConda Gr\u00fcning, B., et al., Bioconda: sustainable and comprehensive software distribution for the life sciences. 2018. 15(7): p. 475. https://bioconda.github.io/ Biopython Cock, P. J., Antao, T., Chang, J. T., Chapman, B. A., Cox, C. J., Dalke, A., ... & De Hoon, M. J. (2009). Biopython: freely available Python tools for computational molecular biology and bioinformatics. Bioinformatics, 25(11), 1422-1423. https://biopython.org/ Bokeh Bokeh Development Team (2018). Bokeh: Python library for interactive visualization. https://bokeh.pydata.org/en/latest/ Bowtie2 Langmead, B. and S.L.J.N.m. Salzberg, Fast gapped-read alignment with Bowtie 2. 2012. 9(4): p. 357. http://bowtie-bio.sourceforge.net/bowtie2/index.shtml Conda NA https://conda.io/ DRMAA NA http://drmaa-python.github.io/ FastQC Andrews, S., FastQC: a quality control tool for high throughput sequence data. 2010. https://www.bioinformatics.babraham.ac.uk/projects/fastqc/ gawk NA https://www.gnu.org/software/gawk/ GNU Parallel O. Tange (2018): GNU Parallel 2018, March 2018, https://doi.org/10.5281/zenodo.1146014 . https://www.gnu.org/software/parallel/ Git NA https://git-scm.com/ igvtools NA https://software.broadinstitute.org/software/igv/igvtools Jupyter Notebook Kluyver, Thomas, et al. \"Jupyter Notebooks-a publishing format for reproducible computational workflows.\" ELPUB. 2016. https://jupyter.org/ Jupyter_contrib_nbextension NA https://github.com/ipython-contrib/jupyter_contrib_nbextensions Jupyterthemes NA https://github.com/dunovank/jupyter-themes Krona Ondov, B.D., N.H. Bergman, and A.M. Phillippy, Interactive metagenomic visualization in a Web browser. BMC Bioinformatics, 2011. 12: p. 385. https://github.com/marbl/Krona/wiki Lofreq Wilm, A., et al., LoFreq: a sequence-quality aware, ultra-sensitive variant caller for uncovering cell-population heterogeneity from high-throughput sequencing datasets. 2012. 40(22): p. 11189-11201. http://csb5.github.io/lofreq/ Minimap2 Li, H., Minimap2: pairwise alignment for nucleotide sequences. Bioinformatics, 2018. https://github.com/lh3/minimap2 MultiQC Ewels, P., et al., MultiQC: summarize analysis results for multiple tools and samples in a single report. 2016. 32(19): p. 3047-3048. https://multiqc.info/ Nb_conda NA https://github.com/Anaconda-Platform/nb_conda Nb_conda_kernels NA https://github.com/Anaconda-Platform/nb_conda_kernels Nginx NA https://www.nginx.com/ Numpy Walt, S. V. D., Colbert, S. C., & Varoquaux, G. (2011). The NumPy array: a structure for efficient numerical computation. Computing in Science & Engineering, 13(2), 22-30. http://www.numpy.org/ Pandas McKinney, W. Data structures for statistical computing in python. in Proceedings of the 9 th Python in Science Conference. 2010. Austin, TX. https://pandas.pydata.org/ Picard NA https://broadinstitute.github.io/picard/ Prodigal Hyatt, D., et al., Prodigal: prokaryotic gene recognition and translation initiation site identification. 2010. 11(1): p. 119. https://github.com/hyattpd/Prodigal/wiki/Introduction Python G. van Rossum, Python tutorial, Technical Report CS-R9526, Centrum voor Wiskunde en Informatica (CWI), Amsterdam, May 1995. https://www.python.org/ Qgrid NA https://github.com/quantopian/qgrid SAMtools Li, H., et al., The sequence alignment/map format and SAMtools. 2009. 25(16): p. 2078-2079. http://www.htslib.org/ SPAdes Nurk, S., et al., metaSPAdes: a new versatile metagenomic assembler. Genome Res, 2017. 27(5): p. 824-834. http://cab.spbu.ru/software/spades/ Seqtk NA https://github.com/lh3/seqtk Snakemake K\u00f6ster, J. and S.J.B. Rahmann, Snakemake\u2014a scalable bioinformatics workflow engine. 2012. 28(19): p. 2520-2522. https://snakemake.readthedocs.io/en/stable/ Tabix NA www.htslib.org/doc/tabix.html tree NA http://mama.indstate.edu/users/ice/tree/ Trimmomatic Bolger, A.M., M. Lohse, and B. Usadel, Trimmomatic: a flexible trimmer for Illumina sequence data. Bioinformatics, 2014. 30(15): p. 2114-20. www.usadellab.org/cms/?page=trimmomatic Virus-Host Database Mihara, T., Nishimura, Y., Shimizu, Y., Nishiyama, H., Yoshikawa, G., Uehara, H., ... & Ogata, H. (2016). Linking virus genomes with host taxonomy. Viruses, 8(3), 66. http://www.genome.jp/virushostdb/note.html Virus-typing tools Kroneman, A., Vennema, H., Deforche, K., Avoort, H. V. D., Penaranda, S., Oberste, M. S., ... & Koopmans, M. (2011). An automated genotyping tool for enteroviruses and noroviruses. Journal of Clinical Virology, 51(2), 121-125. https://www.ncbi.nlm.nih.gov/pubmed/21514213","title":"Acknowledgements &amp; used software"},{"location":"About/Authors/","text":"Jovian authors, github supporters, and developers \u00b6 Original Authors \u00b6 Dennis Schmitz ( RIVM and EMC ) Sam Nooij ( RIVM and EMC ) Robert Verhagen ( RIVM ) Thierry Janssens ( RIVM ) Jeroen Cremer ( RIVM ) Florian Zwagemaker ( RIVM ) Mark Kroon ( RIVM ) Erwin van Wieringen ( RIVM ) Harry Vennema ( RIVM ) Annelies Kroneman ( RIVM ) Marion Koopmans ( EMC ) Additional developers and supporters \u00b6 you?","title":"Authors"},{"location":"About/Authors/#jovian-authors-github-supporters-and-developers","text":"","title":"Jovian authors, github supporters, and developers"},{"location":"About/Authors/#original-authors","text":"Dennis Schmitz ( RIVM and EMC ) Sam Nooij ( RIVM and EMC ) Robert Verhagen ( RIVM ) Thierry Janssens ( RIVM ) Jeroen Cremer ( RIVM ) Florian Zwagemaker ( RIVM ) Mark Kroon ( RIVM ) Erwin van Wieringen ( RIVM ) Harry Vennema ( RIVM ) Annelies Kroneman ( RIVM ) Marion Koopmans ( EMC )","title":"Original Authors"},{"location":"About/Authors/#additional-developers-and-supporters","text":"you?","title":"Additional developers and supporters"},{"location":"About/Contributing/","text":"","title":"Contributing &amp; Support"},{"location":"Getting-started/Installation/","text":"Installation instructions \u00b6 The installation process of Jovian is made to be as easy as possible. Depending on your preferences, the installation can be done automatically with a single command or through manual individual commands. For inexperienced users, we strongly recommend you to use the automated installer. Downloading the package \u00b6 The command below will download the latest Jovian release, places it in a directory named Jovian and will automatically navigate to this newly made directory. git clone https://github.com/DennisSchmitz/Jovian.git ; cd Jovian If you wish to use Jovian on a per-project basis (recommended), then use the snippet below and change \"<project>\" to the name of your desired project. This will automatically navigate you to the newly made directory. dir = \"<project>\" ; git clone https://github.com/DennisSchmitz/Jovian.git $dir ; cd $dir Automatic installation process (recommended) \u00b6 Installation of Jovian and the required databases The automated installer will go through the installation process of basic Jovian dependencies and will install them for you, as well as the required databases. You'll only have to go through this process once. The entire installation process will take (depending on the speed of your computer) about an hour or two. There are a few manual interactions where you will be asked to confirm an action or to make a choice of options. Once the installer is busy with downloading and installing the required databases then it's fine to leave your pc as this step will take a long time without manual interventions. Start the installer with the following command: bash jovian -id You can skip the various confirmation-prompts by using the -y flag. This will make sure all installation steps will simply execute with the default settings without you having to confirm. bash jovian -id -y Tip It's possible that there were errors during the installation of the MGKit-LCA database, resulting in an incomplete database installation (which most likely will cause errors during your analyis). This can be solved by running the following snippet directly after the initial installation procedure is finished: bash ~/database-updater.sh This script ( database-updater.sh ) is generated by the Jovian installation procedure and can be used to keep the databases, required by Jovian, up-to-date on your system. Installation of Jovian with the databases already installed When you don't have to install the required databases, you can simply start an analysis. If it's the first time you're using Jovian then the interactive installer will be started. There are a few manual interactions where you will be asked to confirm an action or to make a choice of options. The entire installation procedure will take about an hour (depending on the speed of your computer). During the installation you will be asked where the required databases are located. If you're unsure about this information then please consult with your local system administrator before continuing. Tip You can skip nearly all prompts and simply go for the default settings by using -y at the end of your command. Manual installation \u00b6 Please only perform a manual installation if you're an experienced Linux user. Installing (mini)conda \u00b6 Download and run the latest (mini)conda installer with the command below: wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh ; \\ chmod +x miniconda.sh ; sh miniconda.sh && \\ rm miniconda.sh Follow the instructions given by the miniconda installer, please verify wether your installation was successful with the following: . ~/.bashrc ; conda activate base The \"base\" environment should be ready active now, this is shown as \"(base) user@host:\" in your terminal. If the snippet above gives an error then that means the conda installation went wrong somewhere, or a required setting is missing. Please type conda init bash in your terminal and try the snippet above again. If there's still an error, please try installing miniconda again. Installing the databases \u00b6 First create the required Jovian_helper conda environment and activate it. You can do this by running the following snippet: conda env create -f bin/envs/Jovian_helper_environment.yaml ; \\ conda activate Jovian_helper Please note that this snippet must be ran for the location where Jovian was downloaded The conda environment Jovian_helper should be active now. If this environment is not active then please try to activate it with conda activate Jovian_helper Download and install the human genome \u00b6 Navigate to the location on your system where you wish to download the human genome. For example: /mnt/db/Human_genome Use the following snippet in order to download the human genome, remove the Epstein-barr virus contig and index the updated genome: a = $( grep -c ^processor /proc/cpuinfo ) ; b = $( echo $(( a-2 ))) aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/WholeGenomeFasta/ ./ awk '{print >out}; />chrEBV/{out=\"EBV.fa\"}' out = temp.fa genome.fa ; head -n -1 temp.fa > nonEBV.fa rm EBV.fa temp.fa mv nonEBV.fa genome.fa bowtie2-build --threads \" ${ b } \" genome.fa genome.fa # >> Press enter << Simply copy this snippet, paste it in your terminal and press enter. The process of downloading and re-indexing the human genome will take roughly 30 minutes or longer, depending on your computer/server. Download and install the BLAST NT database \u00b6 Navigate to the location on your system where you wish to download the NCBI BLAST NT database. For example: /mnt/db/NT_database Use the following command to download and/or update the NCBI BLAST NT database: perl ${ CONDA_PREFIX } /bin/update_blastdb.pl --decompress nt Depending on your download speed, this process can take (several) hours. Download and install the NCBI TaxDB \u00b6 Navigate to the location on your system where you wish to download the NCBI TaxDB. For example: /mnt/db/taxdb Use the following command to download and/or update the NCBI TaxDB database: perl ${ CONDA_PREFIX } /bin/update_blastdb.pl --decompress taxdb depending on your download speed, this process can take several minutes. Download and install the MGKit-LCA database \u00b6 Navigate to the location on your system where you wish to download the MGKit database. For example: /mnt/db/mgkit_database Use the following snippet to download and/or update the MGKit database(s): bash \" ${ CONDA_PREFIX } \" /bin/download-taxonomy.sh rm taxdump.tar.gz wget -O nucl_gb.accession2taxid.gz ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz wget -O nucl_gb.accession2taxid.gz.md5 https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz.md5 md5sum -c nucl_gb.accession2taxid.gz.md5 # >> Press enter << If you get an error during this installation, then please deactivate and reactivate the conda environment with: conda deactivate ; conda activate Jovian_helper Download and install the Krona-LCA database \u00b6 Navigate to the location on your system where you wish to download the Krona-LCA database. For example: /mnt/db/krona_database Use the following commands to download and/or update the Krona-LCA database(s): bash \" ${ CONDA_PREFIX } \" /opt/krona/updateTaxonomy.sh ./ bash \" ${ CONDA_PREFIX } \" /opt/krona/updateAccessions.sh ./ # >> Press Enter << Download the Virus-Host Interaction database \u00b6 Navigate to the location on your system where you wish to download the Virus-Host Interaction database. For example: /mnt/db/virus-Host_interaction Use the following command to download and/or update the Virus-Host Interaction database: wget -O virushostdb.tsv ftp://ftp.genome.jp/pub/db/virushostdb/virushostdb.tsv Download and install the NCBI New_taxdump database \u00b6 Navigate to the location on your system where you wish to download and install the New_taxdump database. For example: /mnt/db/new_taxdump Use the following snippet to download and/or update the NCBI New_taxdump database(s): wget -O new_taxdump.tar.gz ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz wget -O new_taxdump.tar.gz.md5 https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz.md5 tar -xzf new_taxdump.tar.gz for file in *.dmp ; do gawk '{gsub(\"\\t\",\"\"); if(substr($0,length($0),length($0))==\"|\") print substr($0,0,length($0)-1); else print $0}' < ${ file } > ${ file } .delim ; done # >> Press Enter <<","title":"Installation"},{"location":"Getting-started/Installation/#installation-instructions","text":"The installation process of Jovian is made to be as easy as possible. Depending on your preferences, the installation can be done automatically with a single command or through manual individual commands. For inexperienced users, we strongly recommend you to use the automated installer.","title":"Installation instructions"},{"location":"Getting-started/Installation/#downloading-the-package","text":"The command below will download the latest Jovian release, places it in a directory named Jovian and will automatically navigate to this newly made directory. git clone https://github.com/DennisSchmitz/Jovian.git ; cd Jovian If you wish to use Jovian on a per-project basis (recommended), then use the snippet below and change \"<project>\" to the name of your desired project. This will automatically navigate you to the newly made directory. dir = \"<project>\" ; git clone https://github.com/DennisSchmitz/Jovian.git $dir ; cd $dir","title":"Downloading the package"},{"location":"Getting-started/Installation/#automatic-installation-process-recommended","text":"Installation of Jovian and the required databases The automated installer will go through the installation process of basic Jovian dependencies and will install them for you, as well as the required databases. You'll only have to go through this process once. The entire installation process will take (depending on the speed of your computer) about an hour or two. There are a few manual interactions where you will be asked to confirm an action or to make a choice of options. Once the installer is busy with downloading and installing the required databases then it's fine to leave your pc as this step will take a long time without manual interventions. Start the installer with the following command: bash jovian -id You can skip the various confirmation-prompts by using the -y flag. This will make sure all installation steps will simply execute with the default settings without you having to confirm. bash jovian -id -y Tip It's possible that there were errors during the installation of the MGKit-LCA database, resulting in an incomplete database installation (which most likely will cause errors during your analyis). This can be solved by running the following snippet directly after the initial installation procedure is finished: bash ~/database-updater.sh This script ( database-updater.sh ) is generated by the Jovian installation procedure and can be used to keep the databases, required by Jovian, up-to-date on your system. Installation of Jovian with the databases already installed When you don't have to install the required databases, you can simply start an analysis. If it's the first time you're using Jovian then the interactive installer will be started. There are a few manual interactions where you will be asked to confirm an action or to make a choice of options. The entire installation procedure will take about an hour (depending on the speed of your computer). During the installation you will be asked where the required databases are located. If you're unsure about this information then please consult with your local system administrator before continuing. Tip You can skip nearly all prompts and simply go for the default settings by using -y at the end of your command.","title":"Automatic installation process (recommended)"},{"location":"Getting-started/Installation/#manual-installation","text":"Please only perform a manual installation if you're an experienced Linux user.","title":"Manual installation"},{"location":"Getting-started/Installation/#installing-miniconda","text":"Download and run the latest (mini)conda installer with the command below: wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh ; \\ chmod +x miniconda.sh ; sh miniconda.sh && \\ rm miniconda.sh Follow the instructions given by the miniconda installer, please verify wether your installation was successful with the following: . ~/.bashrc ; conda activate base The \"base\" environment should be ready active now, this is shown as \"(base) user@host:\" in your terminal. If the snippet above gives an error then that means the conda installation went wrong somewhere, or a required setting is missing. Please type conda init bash in your terminal and try the snippet above again. If there's still an error, please try installing miniconda again.","title":"Installing (mini)conda"},{"location":"Getting-started/Installation/#installing-the-databases","text":"First create the required Jovian_helper conda environment and activate it. You can do this by running the following snippet: conda env create -f bin/envs/Jovian_helper_environment.yaml ; \\ conda activate Jovian_helper Please note that this snippet must be ran for the location where Jovian was downloaded The conda environment Jovian_helper should be active now. If this environment is not active then please try to activate it with conda activate Jovian_helper","title":"Installing the databases"},{"location":"Getting-started/Installation/#download-and-install-the-human-genome","text":"Navigate to the location on your system where you wish to download the human genome. For example: /mnt/db/Human_genome Use the following snippet in order to download the human genome, remove the Epstein-barr virus contig and index the updated genome: a = $( grep -c ^processor /proc/cpuinfo ) ; b = $( echo $(( a-2 ))) aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/WholeGenomeFasta/ ./ awk '{print >out}; />chrEBV/{out=\"EBV.fa\"}' out = temp.fa genome.fa ; head -n -1 temp.fa > nonEBV.fa rm EBV.fa temp.fa mv nonEBV.fa genome.fa bowtie2-build --threads \" ${ b } \" genome.fa genome.fa # >> Press enter << Simply copy this snippet, paste it in your terminal and press enter. The process of downloading and re-indexing the human genome will take roughly 30 minutes or longer, depending on your computer/server.","title":"Download and install the human genome"},{"location":"Getting-started/Installation/#download-and-install-the-blast-nt-database","text":"Navigate to the location on your system where you wish to download the NCBI BLAST NT database. For example: /mnt/db/NT_database Use the following command to download and/or update the NCBI BLAST NT database: perl ${ CONDA_PREFIX } /bin/update_blastdb.pl --decompress nt Depending on your download speed, this process can take (several) hours.","title":"Download and install the BLAST NT database"},{"location":"Getting-started/Installation/#download-and-install-the-ncbi-taxdb","text":"Navigate to the location on your system where you wish to download the NCBI TaxDB. For example: /mnt/db/taxdb Use the following command to download and/or update the NCBI TaxDB database: perl ${ CONDA_PREFIX } /bin/update_blastdb.pl --decompress taxdb depending on your download speed, this process can take several minutes.","title":"Download and install the NCBI TaxDB"},{"location":"Getting-started/Installation/#download-and-install-the-mgkit-lca-database","text":"Navigate to the location on your system where you wish to download the MGKit database. For example: /mnt/db/mgkit_database Use the following snippet to download and/or update the MGKit database(s): bash \" ${ CONDA_PREFIX } \" /bin/download-taxonomy.sh rm taxdump.tar.gz wget -O nucl_gb.accession2taxid.gz ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz wget -O nucl_gb.accession2taxid.gz.md5 https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz.md5 md5sum -c nucl_gb.accession2taxid.gz.md5 # >> Press enter << If you get an error during this installation, then please deactivate and reactivate the conda environment with: conda deactivate ; conda activate Jovian_helper","title":"Download and install the MGKit-LCA database"},{"location":"Getting-started/Installation/#download-and-install-the-krona-lca-database","text":"Navigate to the location on your system where you wish to download the Krona-LCA database. For example: /mnt/db/krona_database Use the following commands to download and/or update the Krona-LCA database(s): bash \" ${ CONDA_PREFIX } \" /opt/krona/updateTaxonomy.sh ./ bash \" ${ CONDA_PREFIX } \" /opt/krona/updateAccessions.sh ./ # >> Press Enter <<","title":"Download and install the Krona-LCA database"},{"location":"Getting-started/Installation/#download-the-virus-host-interaction-database","text":"Navigate to the location on your system where you wish to download the Virus-Host Interaction database. For example: /mnt/db/virus-Host_interaction Use the following command to download and/or update the Virus-Host Interaction database: wget -O virushostdb.tsv ftp://ftp.genome.jp/pub/db/virushostdb/virushostdb.tsv","title":"Download the Virus-Host Interaction database"},{"location":"Getting-started/Installation/#download-and-install-the-ncbi-new_taxdump-database","text":"Navigate to the location on your system where you wish to download and install the New_taxdump database. For example: /mnt/db/new_taxdump Use the following snippet to download and/or update the NCBI New_taxdump database(s): wget -O new_taxdump.tar.gz ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz wget -O new_taxdump.tar.gz.md5 https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz.md5 tar -xzf new_taxdump.tar.gz for file in *.dmp ; do gawk '{gsub(\"\\t\",\"\"); if(substr($0,length($0),length($0))==\"|\") print substr($0,0,length($0)-1); else print $0}' < ${ file } > ${ file } .delim ; done # >> Press Enter <<","title":"Download and install the NCBI New_taxdump database"},{"location":"Getting-started/Requirements/","text":"Requirements \u00b6 Jovian has minimal system requirements , it is intended for powerful servers and/or grid-computers but also works on powerful PCs and laptops. It has one major software dependencies: Miniconda . During the installation procedure you will be asked if you want to automatically install miniconda (if it is not already available). Additionally, it depends on the following software , but this isn't a problem for most Linux systems as this is usually pre-installed. Update to match the new toolkit \u2192 Any metagenomics analysis, Jovian included, depends on several public databases that you have to download . System & hardware requirements \u00b6 Operating system \u00b6 We have developed and tested the software for the following Linux distributions (\"distro's\"): Red Hat Enterprise Linux 7 CentOS 7 Ubuntu 18.04.4 LTS Ubuntu 20.04 LTS Additionally, Jovian also works on Windows Subsystem for Linux version 2 (Ubuntu) but this functionality is currently not guaranteed. We do expect Jovian to work on other Linux distro's, but cannot guarantee stability. User rights \u00b6 Jovian does not require root and/or sudo rights. In fact, using root will most likely not work. It is however necessary to have both read and write access to the /tmp folder on your system. This won't be a problem most of the time since the /tmp folder is usually free to read from and write to. However, it is best to check this with your system administrator(s). Required disk space \u00b6 Jovian requires several public databases to be installed locally in order to run. The required disk-space for these databases is up to 200 GB. Furthermore, the installation of Jovian itself and all of its components will require ~ 10 GB. This excludes the required disk space for your own data. We advise to have at least 300 GB of free disk space before installing Jovian and/or its components. Software requirements \u00b6 In order to install all required dependencies, Jovian will need the following packages. These software packages are usually pre-installed on Linux systems. Install the required packages: (requires root and/or sudo rights) RHEL/CentOS sudo yum install git curl wget which bzip2 make -y Ubuntu sudo apt install git curl wget bzip2 make -y Software Install on RHEL/CentOS Install on Ubuntu Website git yum install git -y apt install git -y https://git-scm.com/downloads curl yum install curl -y apt install curl -y https://curl.haxx.se/ wget yum install wget -y apt install wget -y https://www.gnu.org/software/wget/ bzip2 yum install bzip2 -y apt install bzip2 -y http://www.bzip.org/ make yum install make -y apt install make -y https://www.gnu.org/software/make/ which yum install which -y N/A http://savannah.gnu.org/projects/which Databases \u00b6 Following is a list of the required databases that are necessary for Jovian. We strongly advise to use our automatic installer as described here . The automatic installer will make sure you have all the required databases available on your system and adds all the required information to the applicable configuration files. However, it's still possible to install the various databases manually . Database name Link Installation instructions NCBI NT ftp://ftp.ncbi.nlm.nih.gov/blast/db/ link NCBI Taxdump ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/ link NCBI New_taxdump ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/ link Virus-Host interaction database http://www.genome.jp/virushostdb/note.html link Latest Human Genome 1 https://support.illumina.com/sequencing/sequencing_software/igenome.html link MGKit taxonomy https://mgkit.readthedocs.io/en/latest/scripts/download-taxonomy.html link We suggest the latest human genome because Jovian is intended for clinical samples. You can however use any reference you'd like, as explained here . \u21a9","title":"Requirements"},{"location":"Getting-started/Requirements/#requirements","text":"Jovian has minimal system requirements , it is intended for powerful servers and/or grid-computers but also works on powerful PCs and laptops. It has one major software dependencies: Miniconda . During the installation procedure you will be asked if you want to automatically install miniconda (if it is not already available). Additionally, it depends on the following software , but this isn't a problem for most Linux systems as this is usually pre-installed. Update to match the new toolkit \u2192 Any metagenomics analysis, Jovian included, depends on several public databases that you have to download .","title":"Requirements"},{"location":"Getting-started/Requirements/#system-hardware-requirements","text":"","title":"System &amp; hardware requirements"},{"location":"Getting-started/Requirements/#operating-system","text":"We have developed and tested the software for the following Linux distributions (\"distro's\"): Red Hat Enterprise Linux 7 CentOS 7 Ubuntu 18.04.4 LTS Ubuntu 20.04 LTS Additionally, Jovian also works on Windows Subsystem for Linux version 2 (Ubuntu) but this functionality is currently not guaranteed. We do expect Jovian to work on other Linux distro's, but cannot guarantee stability.","title":"Operating system"},{"location":"Getting-started/Requirements/#user-rights","text":"Jovian does not require root and/or sudo rights. In fact, using root will most likely not work. It is however necessary to have both read and write access to the /tmp folder on your system. This won't be a problem most of the time since the /tmp folder is usually free to read from and write to. However, it is best to check this with your system administrator(s).","title":"User rights"},{"location":"Getting-started/Requirements/#required-disk-space","text":"Jovian requires several public databases to be installed locally in order to run. The required disk-space for these databases is up to 200 GB. Furthermore, the installation of Jovian itself and all of its components will require ~ 10 GB. This excludes the required disk space for your own data. We advise to have at least 300 GB of free disk space before installing Jovian and/or its components.","title":"Required disk space"},{"location":"Getting-started/Requirements/#software-requirements","text":"In order to install all required dependencies, Jovian will need the following packages. These software packages are usually pre-installed on Linux systems. Install the required packages: (requires root and/or sudo rights) RHEL/CentOS sudo yum install git curl wget which bzip2 make -y Ubuntu sudo apt install git curl wget bzip2 make -y Software Install on RHEL/CentOS Install on Ubuntu Website git yum install git -y apt install git -y https://git-scm.com/downloads curl yum install curl -y apt install curl -y https://curl.haxx.se/ wget yum install wget -y apt install wget -y https://www.gnu.org/software/wget/ bzip2 yum install bzip2 -y apt install bzip2 -y http://www.bzip.org/ make yum install make -y apt install make -y https://www.gnu.org/software/make/ which yum install which -y N/A http://savannah.gnu.org/projects/which","title":"Software requirements"},{"location":"Getting-started/Requirements/#databases","text":"Following is a list of the required databases that are necessary for Jovian. We strongly advise to use our automatic installer as described here . The automatic installer will make sure you have all the required databases available on your system and adds all the required information to the applicable configuration files. However, it's still possible to install the various databases manually . Database name Link Installation instructions NCBI NT ftp://ftp.ncbi.nlm.nih.gov/blast/db/ link NCBI Taxdump ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/ link NCBI New_taxdump ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/ link Virus-Host interaction database http://www.genome.jp/virushostdb/note.html link Latest Human Genome 1 https://support.illumina.com/sequencing/sequencing_software/igenome.html link MGKit taxonomy https://mgkit.readthedocs.io/en/latest/scripts/download-taxonomy.html link We suggest the latest human genome because Jovian is intended for clinical samples. You can however use any reference you'd like, as explained here . \u21a9","title":"Databases"},{"location":"Releases/Changelog/","text":"","title":"Changelog"},{"location":"Releases/Upgrading/","text":"wow","title":"Upgrading from 1.0.x to 1.1.x"},{"location":"Workflows/Overview/","text":"Jovian has three different \"workflows\" which can be used to analyse your data. Jovian currently supports two \"data-types\", namely Illumina-data and Nanopore-data. Illumina data \u00b6 For Illumina data, Jovian currently has two different workflows which can be used to analyse the raw data. The Jovian Illumina-Metagenomics workflow The Jovian Illumina-Reference-based workflow Both Illumina workflows take raw (basecalled and demultiplexed) Illumina NGS data as input from human clinical matrices. Nanopore data \u00b6 For Nanopore data, Jovian currenly has one workflow available which can be used to analyse the raw data. The Jovian Nanopore-Reference-based workflow The Nanopore reference-based workflow takes raw (basecalled and demultiplexed) Nanopore FASTQ data as input. The Nanopore workflow is currently not able to process fast5 data from Nanopore. The Nanopore workflow is intended for amplicon-based sequencing.","title":"Workflow overview"},{"location":"Workflows/Overview/#illumina-data","text":"For Illumina data, Jovian currently has two different workflows which can be used to analyse the raw data. The Jovian Illumina-Metagenomics workflow The Jovian Illumina-Reference-based workflow Both Illumina workflows take raw (basecalled and demultiplexed) Illumina NGS data as input from human clinical matrices.","title":"Illumina data"},{"location":"Workflows/Overview/#nanopore-data","text":"For Nanopore data, Jovian currenly has one workflow available which can be used to analyse the raw data. The Jovian Nanopore-Reference-based workflow The Nanopore reference-based workflow takes raw (basecalled and demultiplexed) Nanopore FASTQ data as input. The Nanopore workflow is currently not able to process fast5 data from Nanopore. The Nanopore workflow is intended for amplicon-based sequencing.","title":"Nanopore data"},{"location":"Workflows/Illumina/Metagenomics/","text":"Jovian Illumina-based Metagenomics Workflow \u00b6 Click on the image for a large workflow-graph Preparing your input data \u00b6 Before using Jovian, you have to make sure that your data is suitable for analysis. There are two major prerequisites: Your data has to be basecalled and demultiplexed. Your input .fastq(.gz) files require a naming scheme that allows for read-identification. Basecalling & demultiplexing: Use bcl2fastq or bcl2fastq2 in order to basecall and demultiplex your data. See more on the Illumina website . Naming your input files accordingly \u00b6 The Jovian-Illumina Metagenomics workflow requires your input-files to be named accordingly in order to have proper analysis of both Illumina reads. Jovian needs both reads as separate files for a correct analysis. However, Jovian is compatible with the default naming scheme of bcl2fastq & bcl2fastq2 basecallers/demultiplexers. Minimal manual work is therefore required. The bcl2fastq naming scheme. which is compatible with Jovian, is as follows: [SampleName]_[SampleNumber]_[LaneNumber]_[ReadNumber]_001.fastq.gz Info For more information about this naming scheme, please refer to the Illumina naming convention page If you're using a naming scheme different than the one provided by Illumina, then make sure the names of your fastq files have the correct structure for processing by Jovian. For quick reference, the list below is a set of examples showing filenames which are compatible with Jovian. Example_dataset1_R1.fastq.gz Example_dataset1_R2.fastq.gz Example_dataset2_R1_001.fastq.gz Example_dataset2_R2_001.fastq.gz Example_metagenomics-set_1.fq Example_metagenomics-set_2.fq Test_data_1.fastq Test_data_2.fastq Warning We strongly discourage the use of special characters ( @/\\![];+()&^%$# etc) in your file names as well as the use of spaces. Using spaces in your filenames is guaranteed to fail, please change these to underscores ( _ ) beforehand. Using special characters in your file names will cause errors in the downstream workflow. Starting your analysis \u00b6 A Jovian Metagenomics analysis can be started with a single command: bash jovian illumina-metagenomics -i /path/to/your/illumina/data/ Please note that we do not look for input files recursively. All your fastq files need to be present in a single folder. Jovian is able to both use \"absolute\" file paths as well as \"relative\" file paths in order to retrieve your raw data. Example Using an absolute file path for your raw data: bash jovian illumina-metagenomics --input /mnt/data/illumina_sequencing_runs/virology/Run_005/ Using a relative file path for your raw data: in this example there's a directory with the raw data two folders below the current working directory bash jovian illumina-metagenomics --input ../../Run_005/ If you do not want to type illumina-metagenomics for every analysis, you can also use the following shorter alternatives: illumina-meta | ilm-meta | im Please see the Command line reference for more shorter alternative flags that you can use. Additional useful commands for your analysis \u00b6 Performing a test-run without processing any actual data \u00b6 You can perform a test-run of the workflow without actually processing any data. This is useful to confirm there aren't any large issues with your input data. You can do this by adding a -n to the end of your command (see the example below) bash jovian illumina-meta -i ../raw_data/ -n Change the stringency mode of the workflow \u00b6 It's possible to change the stringency settings for the metagenomics workflow. You can run the Metagenomics workflow in relaxed analysis mode, or in strict analysis mode. Viral typing \u00b6 This section is wrong (no longer done by hand), update when convenient After a Jovian analysis is finished you can perform virus-typing (i.e. sub-species level taxonomic labelling). These analyses can be started by the command bash jovian -vt [virus keyword] , where [virus keyword] can be: Keyword Taxon used for scaffold selection Notable virus species NoV Caliciviridae Norovirus GI and GII, Sapovirus EV Picornaviridae Enteroviruses (Coxsackie, Polio, Rhino, etc.), Parecho, Aichi, Hepatitis A RVA Rotavirus A Rotavirus A HAV Hepatovirus A Hepatitis A HEV Orthohepevirus A Hepatitis E PV Papillomaviridae Human Papillomavirus Flavi Flaviviridae Dengue (work in progress) all All of the above All of the above","title":"Metagenomics"},{"location":"Workflows/Illumina/Metagenomics/#jovian-illumina-based-metagenomics-workflow","text":"Click on the image for a large workflow-graph","title":"Jovian Illumina-based Metagenomics Workflow"},{"location":"Workflows/Illumina/Metagenomics/#preparing-your-input-data","text":"Before using Jovian, you have to make sure that your data is suitable for analysis. There are two major prerequisites: Your data has to be basecalled and demultiplexed. Your input .fastq(.gz) files require a naming scheme that allows for read-identification. Basecalling & demultiplexing: Use bcl2fastq or bcl2fastq2 in order to basecall and demultiplex your data. See more on the Illumina website .","title":"Preparing your input data"},{"location":"Workflows/Illumina/Metagenomics/#naming-your-input-files-accordingly","text":"The Jovian-Illumina Metagenomics workflow requires your input-files to be named accordingly in order to have proper analysis of both Illumina reads. Jovian needs both reads as separate files for a correct analysis. However, Jovian is compatible with the default naming scheme of bcl2fastq & bcl2fastq2 basecallers/demultiplexers. Minimal manual work is therefore required. The bcl2fastq naming scheme. which is compatible with Jovian, is as follows: [SampleName]_[SampleNumber]_[LaneNumber]_[ReadNumber]_001.fastq.gz Info For more information about this naming scheme, please refer to the Illumina naming convention page If you're using a naming scheme different than the one provided by Illumina, then make sure the names of your fastq files have the correct structure for processing by Jovian. For quick reference, the list below is a set of examples showing filenames which are compatible with Jovian. Example_dataset1_R1.fastq.gz Example_dataset1_R2.fastq.gz Example_dataset2_R1_001.fastq.gz Example_dataset2_R2_001.fastq.gz Example_metagenomics-set_1.fq Example_metagenomics-set_2.fq Test_data_1.fastq Test_data_2.fastq Warning We strongly discourage the use of special characters ( @/\\![];+()&^%$# etc) in your file names as well as the use of spaces. Using spaces in your filenames is guaranteed to fail, please change these to underscores ( _ ) beforehand. Using special characters in your file names will cause errors in the downstream workflow.","title":"Naming your input files accordingly"},{"location":"Workflows/Illumina/Metagenomics/#starting-your-analysis","text":"A Jovian Metagenomics analysis can be started with a single command: bash jovian illumina-metagenomics -i /path/to/your/illumina/data/ Please note that we do not look for input files recursively. All your fastq files need to be present in a single folder. Jovian is able to both use \"absolute\" file paths as well as \"relative\" file paths in order to retrieve your raw data. Example Using an absolute file path for your raw data: bash jovian illumina-metagenomics --input /mnt/data/illumina_sequencing_runs/virology/Run_005/ Using a relative file path for your raw data: in this example there's a directory with the raw data two folders below the current working directory bash jovian illumina-metagenomics --input ../../Run_005/ If you do not want to type illumina-metagenomics for every analysis, you can also use the following shorter alternatives: illumina-meta | ilm-meta | im Please see the Command line reference for more shorter alternative flags that you can use.","title":"Starting your analysis"},{"location":"Workflows/Illumina/Metagenomics/#additional-useful-commands-for-your-analysis","text":"","title":"Additional useful commands for your analysis"},{"location":"Workflows/Illumina/Metagenomics/#performing-a-test-run-without-processing-any-actual-data","text":"You can perform a test-run of the workflow without actually processing any data. This is useful to confirm there aren't any large issues with your input data. You can do this by adding a -n to the end of your command (see the example below) bash jovian illumina-meta -i ../raw_data/ -n","title":"Performing a test-run without processing any actual data"},{"location":"Workflows/Illumina/Metagenomics/#change-the-stringency-mode-of-the-workflow","text":"It's possible to change the stringency settings for the metagenomics workflow. You can run the Metagenomics workflow in relaxed analysis mode, or in strict analysis mode.","title":"Change the stringency mode of the workflow"},{"location":"Workflows/Illumina/Metagenomics/#viral-typing","text":"This section is wrong (no longer done by hand), update when convenient After a Jovian analysis is finished you can perform virus-typing (i.e. sub-species level taxonomic labelling). These analyses can be started by the command bash jovian -vt [virus keyword] , where [virus keyword] can be: Keyword Taxon used for scaffold selection Notable virus species NoV Caliciviridae Norovirus GI and GII, Sapovirus EV Picornaviridae Enteroviruses (Coxsackie, Polio, Rhino, etc.), Parecho, Aichi, Hepatitis A RVA Rotavirus A Rotavirus A HAV Hepatovirus A Hepatitis A HEV Orthohepevirus A Hepatitis E PV Papillomaviridae Human Papillomavirus Flavi Flaviviridae Dengue (work in progress) all All of the above All of the above","title":"Viral typing"},{"location":"Workflows/Illumina/Reference/","text":"","title":"Reference based"},{"location":"Workflows/Nanopore/Reference/","text":"","title":"Reference based"}]}